import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression

st.set_page_config(
        page_title="GibData",
)
def upload():    
    st.set_page_config(
        page_title="Course Recommender",
        page_icon="üß†",
        layout="wide",
        initial_sidebar_state="expanded",
    )
    # st.title("–ö–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–Ω—ã–π –ø–æ–¥–±–æ—Ä –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤")
    st.markdown("# :rainbow[–ö–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–Ω—ã–π –ø–æ–¥–±–æ—Ä –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ [GibData]]")
    st.empty().markdown("&nbsp;")
    
    st.empty().markdown('''### {}'''.format("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã"), 
                        help='Choose either 1 or 2 but not both. If both are selected 1 will be used.')

    title_header_empty = st.empty()
    title_choice_empty = st.empty()
    
    col1, col2, col3 = st.columns(3)
    with col1:
        directions_header_empty = st.empty()
        directions_choice_empty = st.empty()

    with col2:
        knowledge_header_empty = st.empty()
        knowledge_choice_empty = st.empty()

    with col3:
        keys_header_empty = st.empty()
        keys_choice_empty = st.empty()

    directions_header_empty.markdown('''##### –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è''', help='Choose either 1 or 2.')
    directions_choice_empty.selectbox("directions", label_visibility="collapsed",
                                   options=['–í—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                                            '–ò–¢',
                                            '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
                                            '–î–∏–∑–∞–π–Ω',
                                            '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
                                            '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
                                            '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
                                            '–ò–¢-–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
                                            '–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
                                            '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', 
                                            '–ò–≥—Ä—ã',
                                            'Blockchain',
                                            '–ö–∏–Ω–æ –∏ –º—É–∑—ã–∫–∞'], key='directions')

    knowledge_header_empty.markdown('''##### –ó–Ω–∞–Ω–∏—è –Ω–∞ –≤—ã—Ö–æ–¥–µ''', help='Choose either 1 or 2.')
    knowledge_choice_empty.selectbox("knowledge", label_visibility="collapsed",
                                     options=['Junior',
                                            'Middle',
                                            'Middle+'], 
                                     key='knowledge',)

    keys_header_empty.markdown('''##### –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞''', help='Choose either 1 or 2.')
    keys_choice_empty.multiselect('''##### –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞''',
                                  ["Data Scientist", "PyTorch", "CV", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"],
                                  label_visibility='collapsed',
                                  placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞...",)

    cols = st.columns(10)
    with cols[0]:
        free_choice_empty = ui.switch(default_checked=True, label="–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ", key="switch1")
    with cols[1]:
        action_choice_empty = ui.switch(default_checked=True, label="–°–æ —Å–∫–∏–¥–∫–æ–π", key="switch2")
    
    ms = st.multiselect('''##### –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã''', 
                        ["–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞", 
                         "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"], 
                        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø—Ä–æ—à–ª–∏...",)
    if 1 in ms and 2 in ms:
        ms.remove(2)

    cols = st.columns(10)
    with cols[0]:
        recommend_button = ui.button(text="–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å", 
                                     key="styled_btn_tailwind", 
                                     className="bg-orange-500 text-white",)
    with cols[1]:
        delete_button = ui.button(text="–°–±—Ä–æ—Å–∏—Ç—å", key="d", className="grey")

    if recommend_button and not delete_button:
    
        st.empty().markdown('''### {}'''.format("–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –∫—É—Ä—Å—ã"), 
                            help='Choose either 1 or 2 but not both. If both are selected 1 will be used.')
        cols = st.columns(3)
        with cols[0]:
            title = "–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≥–æ–¥–∞ üî•"
            content = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
            description = "–°—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è: 6 –º–µ—Å—è—Ü–µ–≤"
            ui.metric_card(title=title, content=content, description=description, key="card1")
        with cols[1]:
            title = "–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≥–æ–¥–∞ üî•"
            content = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
            description = "–°—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è: 6 –º–µ—Å—è—Ü–µ–≤"
            ui.metric_card(title=title, content=content, description=description, key="card2")
        with cols[2]:
            title = "–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≥–æ–¥–∞ üî•"
            content = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
            description = "–°—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è: 6 –º–µ—Å—è—Ü–µ–≤"
            ui.metric_card(title=title, content=content, description=description, key="card3")
    
        cols = st.columns(3)
        with cols[0]:
            title = "–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≥–æ–¥–∞ üî•"
            content = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
            description = "–°—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è: 6 –º–µ—Å—è—Ü–µ–≤"
            ui.metric_card(title=title, content=content, description=description, key="card4")
        with cols[1]:
            title = "–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≥–æ–¥–∞ üî•"
            content = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
            description = "–°—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è: 6 –º–µ—Å—è—Ü–µ–≤"
            ui.metric_card(title=title, content=content, description=description, key="card5")
        with cols[2]:
            title = "–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ –≥–æ–¥–∞ üî•"
            content = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
            description = "–°—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è: 6 –º–µ—Å—è—Ü–µ–≤"
            ui.metric_card(title=title, content=content, description=description, key="card6")
                
if __name__ == "__main__":
       upload()
